#!/bin/sh

. ./.env
set -e

if [ -f "/.cloud_exchange_vm.marker" ]; then
    file_path="/opt/cloudexchange/containers/ce_containers.tar"
    if [ -f "$file_path" ] && [ -z $SKIP_IMPORT ]; then
        echo "Importing Cloud Exchange images..."
        while [ -f "$file_path" ]; do
            sleep 5
        done
        echo "Successfully imported Cloud Exchange images..."
    fi
fi

if [ -f /etc/redhat-release ] && [ `grep -c "Red Hat" /etc/redhat-release` -eq 1 ]; then  
    if [ `grep -c "7.9" /etc/redhat-release` -ge 1 ]; then
        docker-compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find docker-compose"
            exit 1;
        else
            if [ -z "${HA_IP_LIST}" ]; then
                docker-compose --compatibility up --remove-orphans -d
            else
                docker-compose -f docker-compose-ha.yml --env-file=$HA_NFS_DATA_DIRECTORY/config/.env --compatibility up --remove-orphans -d
                alias compose_command="docker-compose -f docker-compose-ha.yml"
            fi
        fi
    else
        podman-compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find podman-compose"
            exit 1;
        else
            if [ -z "${HA_IP_LIST}" ]; then
                podman-compose -f podman-compose.yml up -d
            else
                podman-compose -f podman-compose-ha.yml --env-file=$HA_NFS_DATA_DIRECTORY/config/.env up -d
                alias compose_command="podman-compose -f podman-compose-ha.yml"
            fi
        fi
    fi
else 
    docker-compose version &> /dev/null
    if [ $? -eq 127 ]; then
        podman-compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find docker-compose or podman-compose"
            exit 1;
        else
            if [ -z "${HA_IP_LIST}" ]; then
                podman-compose -f podman-compose.yml up -d
            else
                podman-compose -f podman-compose-ha.yml --env-file=$HA_NFS_DATA_DIRECTORY/config/.env up -d
                alias compose_command="podman-compose -f podman-compose-ha.yml"
            fi
        fi
    else
        if [ -z "${HA_IP_LIST}" ]; then
            docker-compose --compatibility up --remove-orphans -d
        else
            docker-compose -f docker-compose-ha.yml --env-file=$HA_NFS_DATA_DIRECTORY/config/.env --compatibility up --remove-orphans -d
            alias compose_command="docker-compose -f docker-compose-ha.yml"
        fi
    fi
fi

if [ -n "${HA_IP_LIST}" ]; then
    sleep 30
    if [ "$HA_PRIMARY_NODE_IP" = "$HA_CURRENT_NODE" ]; then
        ./replica_set --initiate
    else
        ./replica_set --join
        sleep 5
        compose_command exec -- rabbitmq-stats rabbitmqctl stop_app
        compose_command exec -- rabbitmq-stats rabbitmqctl reset
        compose_command exec -- rabbitmq-stats rabbitmqctl join_cluster rabbit@$HA_PRIMARY_NODE_IP
        compose_command exec -- rabbitmq-stats rabbitmqctl start_app
        if [ "${SYNC_STRATEGY}" = "2" ]; then
            compose_command exec -- rabbitmq-stats rabbitmqctl set_policy ha "." '{"ha-mode":"all","ha-sync-mode":"automatic","ha-sync-batch-size":20}'
        else
            compose_command exec -- rabbitmq-stats rabbitmqctl set_policy ha "." '{"ha-mode":"all","ha-sync-mode":"manual"}'
        fi
    fi
fi
