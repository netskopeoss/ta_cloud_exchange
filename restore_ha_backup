#!/bin/sh
set -a
. ./.env || (echo "Please run setup first" && exit 1)
. ${ENV_FILE}

([ -n "${HA_NFS_DATA_DIRECTORY}" ] && [ -n "$HA_PRIMARY_NODE_IP" ] && [ -n "$HA_IP_LIST" ]) || (echo "Please configure HA parameters in setup." && exit 1)

. ${LOCATION}
set +a

if [ -f /etc/redhat-release ] && [ `grep -c "Red Hat" /etc/redhat-release` -eq 1 ]; then  
    if [ `grep -c "7.9" /etc/redhat-release` -ge 1 ]; then
        docker compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find docker compose"
            exit 1;
        else
            container_command=docker
            if [ -z "${HA_IP_LIST}" ]; then
                alias compose_command="docker compose -f docker-compose.yml"
            else
                alias compose_command="docker compose -f docker-compose-ha.yml"
            fi
        fi
    else
        podman-compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find podman-compose"
            exit 1;
        else
            container_command=podman
            if [ -z "${HA_IP_LIST}" ]; then
                alias compose_command="podman-compose -f podman-compose.yml"
            else
                alias compose_command="podman-compose -f podman-compose-ha.yml"
            fi
        fi
    fi
else
    docker compose version &> /dev/null
    if [ $? -eq 127 ]; then
        podman-compose version &> /dev/null
        if [ $? -eq 127 ]; then
            echo "Could not find docker compose or podman-compose"
            exit 1;
        else
            container_command=podman
            if [ -z "${HA_IP_LIST}" ]; then
                alias compose_command="podman-compose -f podman-compose.yml"
            else
                alias compose_command="podman-compose -f podman-compose-ha.yml"
            fi
        fi
    else
        container_command=docker
        if [ -z "${HA_IP_LIST}" ]; then
            alias compose_command="docker compose -f docker-compose.yml"
        else
            alias compose_command="docker compose -f docker-compose-ha.yml"
        fi
    fi
fi

set -e

MIGRATE_MONGO=${MIGRATE_MONGO:-true}
if [ "$MIGRATE_MONGO" = "true" ]; then
    echo "Migrating Mongo data"
    sudo chown -R 1001:1001 data/mongo-data
    sudo chmod -R 744 data/mongo-data
    compose_command up mongodb-primary -d
    sleep 5
    decrypt() {
        echo "$1" | openssl enc -aes-256-cbc -A -d -a -S $CE_HEX_CODE -K "$2" -iv $CE_IV -pbkdf2 -iter 10000
    }
    CE_SETUP_ID=$(echo "$CE_SETUP_ID" | tr -d '"')
    # Generate processed key
    PROCESSED_KEY=$(echo -n $CE_SETUP_ID | openssl dgst -sha256 -hex | awk '{print $2}')
    # export value
    export MONGO_INITDB_ROOT_PASSWORD="$(decrypt "${MONGO_INITDB_ROOT_PASSWORD}" "${PROCESSED_KEY}")"
    compose_command exec mongodb-primary bash -c "mongosh -u root -p $MONGO_INITDB_ROOT_PASSWORD --eval 'cfg = rs.conf();cfg.members[0].host = \"$HA_PRIMARY_NODE_IP:27017\";rs.reconfig(cfg, { force: true })'"
    sleep 5
    compose_command down -v
    echo "Successfully migrated Mongo data"
fi
